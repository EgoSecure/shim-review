diff --git a/shim.c b/shim.c
index c5cfbb8..69e2636 100644
--- a/shim.c
+++ b/shim.c
@@ -1350,7 +1350,7 @@ get_load_option_optional_data(UINT8 *data, UINTN data_size,
 	*ods = limit - i;
 	return EFI_SUCCESS;
 }
-
+#if 0
 static int is_our_path(EFI_LOADED_IMAGE *li, CHAR16 *path)
 {
 	CHAR16 *dppath = NULL;
@@ -1379,12 +1379,14 @@ done:
 	FreePool(PathName);
 	return ret;
 }
+#endif
 
 /*
  * Check the load options to specify the second stage loader
  */
 EFI_STATUS set_second_stage (EFI_HANDLE image_handle)
 {
+#if 0
 	EFI_STATUS efi_status;
 	EFI_LOADED_IMAGE *li = NULL;
 	CHAR16 *start = NULL;
@@ -1392,6 +1394,8 @@ EFI_STATUS set_second_stage (EFI_HANDLE image_handle)
 	CHAR16 *loader_str = NULL;
 	UINTN loader_len = 0;
 	unsigned int i;
+#endif
+	(void)image_handle;
 	UINTN second_stage_len;
 
 	second_stage_len = (StrLen(DEFAULT_LOADER) + 1) * sizeof(CHAR16);
@@ -1403,7 +1407,7 @@ EFI_STATUS set_second_stage (EFI_HANDLE image_handle)
 	StrCpy(second_stage, DEFAULT_LOADER);
 	load_options = NULL;
 	load_options_size = 0;
-
+#if 0
 	efi_status = gBS->HandleProtocol(image_handle, &LoadedImageProtocol,
 					 (void **) &li);
 	if (EFI_ERROR(efi_status)) {
@@ -1600,7 +1604,7 @@ EFI_STATUS set_second_stage (EFI_HANDLE image_handle)
 		load_options = remaining_size ? start + (loader_len/2) : NULL;
 		load_options_size = remaining_size;
 	}
-
+#endif
 	return EFI_SUCCESS;
 }
 
